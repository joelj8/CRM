@model CRM.Models.Customer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @*
        <div class="container">
            <div class="row">
                <div class="col-md-8 col-md-offset-2">
                    <div class="Panel with panel-primary class">
                        <div class="panel-heading">Customer</div>
                        <div class="panel-body">
                        </div>
                    <div class="panel-footer">panel footer</div>
                    </div>
                </div>
            </div>
        </div>
    *@

    @*

    <div class="form-horizontal panel">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6 text-center">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.fechaNacimiento, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = "dd/mm/yyyy" })
                    @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- Your first column here -->
        </div>

        <div class="col-md-6 text-center">
            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GenderId, ViewBag.GenderList as SelectList, "Selecciona el Genero", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- Your second column here -->
        </div>
    </div>

    *@

    <div class="form-horizontal panel">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "form-control datepicker", placeholder = "dd/mm/yyyy" } }) *@

                @Html.TextBoxFor(model => model.fechaNacimiento, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = "dd/mm/yyyy" })
                @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GenderId, ViewBag.GenderList as SelectList, "Selecciona el Genero", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />

                @Html.ActionLink("Back to List", "",
                new { controller = "Customers" },
                new { @class = "btn btn-warning" })


                <button id="Find" class="btn btn-success">Buscar</button>
                
            </div>
        </div>

    </div>

}

<div id="modalWrapper">
    @Html.Partial("_BuscCustomer")
</div>

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $('.input-group.date').datepicker({ format: "dd/mm/yyyy" });
            $('.datepicker').datepicker({ format: "dd/mm/yyyy" });
            $("#btnSelected").hide();

            //$('#modalWrapper').html();
            $('#Find').click(function (e) {
                e.preventDefault();
                 $('#editModal').modal();
            });

            $('#FindOption').click(function (e) {
                
                //alert('Buscar info');
                //debugger

                var BusquedaID = $('#ContactFind').val();
                
                    //url: '@Url.Action("FindContact", "Customers")',
                    //ContactoID: BusquedaID

                $.ajax({
                    url: "findcontact",
                    type: "GET",
                    traditional: true,
                    data: { ContactoID: BusquedaID },
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    dataType: "json",
                    success: function(dataReg) {
                        if (dataReg != null) {
                            //debugger
                            //alert("Registro valido");
                            var trHTML = ' ';
                            $("#records_table > tbody > tr").remove();
                            $.each(dataReg, function (i, item) {
                                //trBtn = '<td><input type="button" name = '+item.ID+' id="btn'+item.ID+'" class="btn btn-primary btnselect"></input></td>'
                                trBtn = '<td><input type="radio" name="rbtnSel" id=' + item.ID + ' /><td>'
                                trHTML += '<tr><td>' + item.Name + '</td><td>' + item.Mail + '</td><td>' + item.Phone + '</td>' + trBtn + '</tr>';

                            });
                            //trHTML += ' </tbody> '
                            $('#records_table > tbody ').append(trHTML);
                            $("#btnSelected").show();
                        } else {
                            $("#btnSelected").hide();
                        }
                  }
                });

                e.preventDefault();
            });

            $("#btnSelected").click(function () {

                //debugger
                
                var radioValue = $("input[name='rbtnSel']:checked");
                
                if(typeof radioValue[0].id == "string"){
                    //alert("Your are a - " + radioValue[0].id);
                    selcontact(radioValue[0].id);
                }
                //alert("Click on");

            });
            

        });

        function selcontact(idselect) {
            //debugger
               // alert("Click on");
                var findid = idselect;
                $.ajax({
                    url: "findcontactid",
                    type: "GET",
                    traditional: true,
                    data: { ContactoID: findid },
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    dataType: "json",
                    success: function(dataReg) {
                      if (dataReg != null) {
                          //debugger
                          //alert("Registro valido");
                          $("#Name").val(dataReg.Name);
                          $("#fechaNacimiento").val(dataReg.fechaNacimiento);
                          $("#Phone").val(dataReg.Phone);
                          $("#Mail").val(dataReg.Mail);
                          $("#Address").val(dataReg.Address);
                          $("#GenderId").val(dataReg.GenderId);

                          //$('#editModal').hide();
                          CierraPopup();
                      }
                  }
                });

        }

        function CierraPopup() {
            $("#editModal").modal('hide');//ocultamos el modal
            $('body').removeClass('modal-open');//eliminamos la clase del body para poder hacer scroll
            $('.modal-backdrop').remove();//eliminamos el backdrop del modal
        }

        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "L", true).isValid();
            }
        });

    </script>
}

